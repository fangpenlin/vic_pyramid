from __future__ import unicode_literals
import os
import unittest
import datetime

from pyramid.settings import asbool
from sqlalchemy import create_engine
from sqlalchemy.orm import scoped_session
from sqlalchemy.orm import sessionmaker
from zope.sqlalchemy import ZopeTransactionExtension

from {{package}}.models.tables import DeclarativeBase
from {{package}}.models import tables


def create_session():
    """Create engine and session, return session then
    
    """
    echo_sql = asbool(os.environ.get('TEST_ECHO_SQL', False))
    
    engine = create_engine('sqlite:///', convert_unicode=True, echo=echo_sql)
    DeclarativeBase.metadata.bind = engine
    DeclarativeBase.metadata.create_all()

    session = scoped_session(sessionmaker(
        autocommit=False,
        autoflush=False,
        bind=engine,
        extension=ZopeTransactionExtension(keep_session=True)
    ))
    return session


class ModelTestCase(unittest.TestCase):

    def setUp(self):
        
        self.session = create_session()
        self._old_now_func = tables.set_now_func(datetime.datetime.utcnow)

    def tearDown(self):
        self.session.remove()
        tables.DeclarativeBase.metadata.drop_all()
        tables.set_now_func(self._old_now_func)
